
@{
    Layout = null;
}



<!DOCTYPE html>
<html lang="en">
<head>
    <title>Load survey json from the SurveyJS Service, Knockoutjs Survey Library Example</title>
    <meta name="viewport" content="width=device-width" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://unpkg.com/knockout@3.5.1/build/output/knockout-latest.js"></script>
    <script src="https://unpkg.com/survey-knockout@1.8.53/survey.ko.min.js"></script>
    <link href="https://unpkg.com/survey-core@1.8.53/modern.min.css" type="text/css" rel="stylesheet" />
    <link rel="stylesheet" href="./index.css">
</head>
<body>

    <input type="hidden" id="SurveyID" value="@ViewBag.SurveyTemplate.TemplateID" />
    <input type="hidden" id="SurveyForm" value="@ViewBag.SurveyTemplate.Template" />
    <div id="surveyElement" style="display:inline-block;width:100%;"></div>
    <div id="surveyResult"></div>
    <script type="text/javascript" src="./index.js"></script>
    <script>

        Survey
            .StylesManager
            .applyTheme("modern");

        //var json = {
        //    surveyId: '5af48e08-a0a5-44a5-83f4-1c90e8e98de1'
        //};

        window.survey = new Survey.Model($("#SurveyForm").val());

        //survey
        //    .onComplete
        //    .add(function (sender) {
        //        document
        //            .querySelector('#surveyResult')
        //            .textContent = "Result JSON:\n" + JSON.stringify(sender.data, null, 3);
        //    });

        survey.render("surveyElement");

        survey.onComplete.add(function (sender, options) {

            //  alert(JSON.stringify(sender.data));
            var formData = modifySurveyResults(sender);
            // alert(formData);

            return fetch(GetBaseURL() + "Survey/AddSurveyData/" + $("#SurveyID").val() + "", {
                body: JSON.stringify({ formData: formData, jsonData: sender.data }),
                headers: {
                    'content-type': 'application/json'
                },

                method: 'POST',
                mode: 'cors',
            })
                .then(response => {
                    form.emit('submitDone', sender.data)

                });

            //$.ajax({
            //    url: GetBaseURL() + "Survey/AddSurveyData?SurveyID=" + $("#SurveyID").val() + "",
            //    body: JSON.stringify(sender.data),
            //    processData: false,
            //    headers: {
            //        'content-type': 'application/json'
            //    },
            //    method: 'POST',
            //     mode: 'cors',
            //    success: function (response) {

            //    },
            //    error: function (XMLHttpRequest, textStatus, errorThrown) {

            //    }
            //});

            //var xhr = new XMLHttpRequest();
            //xhr.open("POST", GetBaseURL() + "Survey/AddSurveyData?SurveyID=" + $("#SurveyID").val() + "");
            //xhr.setRequestHeader("Content-Type", "application/json; charset=utf-8");
            //alert(sender.data);
            //alert(JSON.stringify(sender.data));
            //xhr.send(JSON.stringify(sender.data));
            function modifySurveyResults(survey) {
                var resultData = [];
                for (var key in survey.data) {
                    var question = survey.getQuestionByValueName(key);
                    if (!!question) {
                        var item = { value: question.value };
                        //If question name (question.valueName) doesn't equal to question.title
                        if (key !== question.title) {
                            item.title = question.title;
                        }
                        //If question value different from displayValue
                        if (item.value != question.displayValue) {
                            item.value = question.displayValue
                            // item.displayValue = question.displayValue
                        }
                        //If the custom property tag is defined set
                        if (question.tag !== undefined) {
                            item.tag = question.tag;
                        }
                        resultData.push(item);
                    }
                }
                console.log(resultData)
                return resultData;
            }

        });
    </script>
</body>
</html>




